apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: seeder-api
  labels:
    app: seeder-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: seeder-api
  template:
    metadata:
      labels:
        app: seeder-api
    spec:
      containers:
      - name: seeder-api
        image: seeder
        imagePullPolicy: IfNotPresent
        env:
        - name: MQ_HOST
          value: rabbitmq
        - name: KUBE_BOUNCE_COMMAND
          value: 'kubectl --insecure-skip-tls-verify set env deployment/%s --env="LAST_MANUAL_RESTART=$(date +%%s)"'
        - name: PYTHONUNBUFFERED
          value: '1'
        ports:
        - containerPort: 8000
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          timeoutSeconds: 3
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          timeoutSeconds: 3
          periodSeconds: 15
        volumeMounts:
        - name: kubeconfig-vol
          mountPath: /root/config
          subPath: kubeconfig.yaml
      volumes:
      - name: kubeconfig-vol
        secret:
          secretName: k3s-credential

---
kind: Service
apiVersion: v1
metadata:
  namespace: default
  name: seeder-api
spec:
  type: NodePort
  selector:
    app: seeder-api
  ports:
  - name: server
    port: 8000
    targetPort: 8000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: seeder-splitter-mqp
  labels:
    app: seeder-splitter-mqp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seeder-splitter-mqp
  template:
    metadata:
      labels:
        app: seeder-splitter-mqp
    spec:
      containers:
      - name: seeder-splitter-mqp
        image: seeder
        imagePullPolicy: IfNotPresent
        command: ["python3"]
        args: ["splitter_mqp.py"]
        env:
        - name: MQ_HOST
          value: rabbitmq
        - name: API_URL
          value: http://seeder-api:8000
        - name: PYTHONUNBUFFERED
          value: '1'

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: seeder-transformer-mqp
  labels:
    app: seeder-transformer-mqp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seeder-transformer-mqp
  template:
    metadata:
      labels:
        app: seeder-transformer-mqp
    spec:
      containers:
      - name: seeder-transformer-mqp
        image: seeder
        imagePullPolicy: IfNotPresent
        command: ["python3"]
        args: ["transformer_mqp.py"]
        env:
        - name: MQ_HOST
          value: rabbitmq
        - name: PYTHONUNBUFFERED
          value: '1'

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: seeder-mqp
  labels:
    app: seeder-mqp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: seeder-mqp
  template:
    metadata:
      labels:
        app: seeder-mqp
    spec:
      containers:
      - name: seeder-mqp
        image: seeder
        imagePullPolicy: IfNotPresent
        command: ["python3"]
        args: ["seeder_mqp.py"]
        env:
        - name: MQ_HOST
          value: rabbitmq
        - name: S_CONSUL_HOST
          value: consul
        - name: S_VAULT_HOST
          value: vault
        - name: S_VAULT_TOKEN
          value: v5ulT
        - name: PYTHONUNBUFFERED
          value: '1'

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: bouncer-mqp
  labels:
    app: bouncer-mqp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bouncer-mqp
  template:
    metadata:
      labels:
        app: bouncer-mqp
    spec:
      containers:
      - name: bouncer-mqp
        image: seeder
        imagePullPolicy: IfNotPresent
        command: ["python3"]
        args: ["bouncer_mqp.py"]
        env:
        - name: MQ_HOST
          value: rabbitmq
        - name: API_URL
          value: http://seeder-api:8000
        - name: PYTHONUNBUFFERED
          value: '1'

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: file-seeder
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: file-seeder
            image: seeder
            args:
            - /bin/sh
            - -c
            - ls /seeds/consul/* | xargs -I % echo "curl -i -XPOST -H \"Content-Type:multipart/form-data\" -F \"file=@/seeds/consul/%\" \"http://seeder-api:8000/seed/consul/spring\" | awk '{system($0)}"
            volumeMounts:
            - name: data-vol
              mountPath: /seeds
          restartPolicy: OnFailure
          volumes:
          - name: data-vol
            hostPath:
              path: /data/seeds
